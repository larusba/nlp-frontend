[{"/Users/roberto/Projects/nlp-frontend/src/index.js":"1","/Users/roberto/Projects/nlp-frontend/src/reportWebVitals.js":"2","/Users/roberto/Projects/nlp-frontend/src/App.js":"3","/Users/roberto/Projects/nlp-frontend/src/TextAreaForm.tsx":"4","/Users/roberto/Projects/nlp-frontend/src/AppContainer.tsx":"5","/Users/roberto/Projects/nlp-frontend/src/NlpService.tsx":"6","/Users/roberto/Projects/nlp-frontend/src/JsonView.tsx":"7","/Users/roberto/Projects/nlp-frontend/src/FileSubmitForm.tsx":"8"},{"size":500,"mtime":1608810992499,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608810992500,"results":"11","hashOfConfig":"10"},{"size":534,"mtime":1608827753870,"results":"12","hashOfConfig":"10"},{"size":1514,"mtime":1608824774824,"results":"13","hashOfConfig":"10"},{"size":1964,"mtime":1608827491670,"results":"14","hashOfConfig":"10"},{"size":849,"mtime":1608826116663,"results":"15","hashOfConfig":"10"},{"size":582,"mtime":1608823612712,"results":"16","hashOfConfig":"10"},{"size":2232,"mtime":1608827824683,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"olhn3k",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/roberto/Projects/nlp-frontend/src/index.js",[],["39","40"],"/Users/roberto/Projects/nlp-frontend/src/reportWebVitals.js",[],"/Users/roberto/Projects/nlp-frontend/src/App.js",["41"],"/Users/roberto/Projects/nlp-frontend/src/TextAreaForm.tsx",["42","43"],"import React, {Fragment} from 'react';\nimport {Formik, Field, Form, FormikValues} from \"formik\";\nimport {Row} from \"react-bootstrap\";\n\nclass TextAreaForm extends React.Component<any, any> {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Formik\n                    initialValues={{ text: \"Salve mi chiamo Mario Rossi e lavoro per Eni S.p.a con sede a Roma\" }}\n                    onSubmit={(values) => this.props.onSubmit(values)}\n                >\n                    <Form>\n                        <Row className='mt-2'>\n                            <div><label htmlFor=\"text\">Text upload</label></div>\n                        </Row>\n                        <Row className='mt-2'>\n                            <Field name=\"text\" as=\"textarea\" type=\"textarea\" className='mr-2' rows=\"4\" cols=\"60\" />\n                        </Row>\n                        {/*<Row className='mt-2'>\n                            <Field name=\"searchType\" as=\"select\">\n                                <option value=\"SENTENZA\">SENTENZA</option>\n                                <option value=\"VISURA\">VISURA</option>\n                            </Field>\n                        </Row>*/}\n                        <Row className='mt-2 mb-2'>\n                            <button type=\"submit\">Submit</button>\n                        </Row>\n                    </Form>\n                </Formik>\n            </Fragment>\n        )\n    }\n}\n\nexport default TextAreaForm;",["44","45"],"/Users/roberto/Projects/nlp-frontend/src/AppContainer.tsx",["46","47","48","49"],"/Users/roberto/Projects/nlp-frontend/src/NlpService.tsx",["50","51"],"import React, {Fragment} from 'react';\n\ninterface NlpService {\n    getNerByText: (text: string) => Promise<any>;\n    getNerByFile: (searchType: string, file: any) => Promise<any>;\n}\n\nconst getNerByText = (text: string): Promise<any> => {\n    const url = \"http://localhost:8080/ner-by-text\";\n    return fetch(url, {headers : {'Content-Type' : 'application/json'}, method : \"POST\", body: JSON.stringify(text)}).then(res => res.text())\n}\n\nconst getNerByFile = (searchType: string, file: any): Promise<any> => {\n    const url = \"http://localhost:8080/ner-by-document?\" +\n        \"docType=\" + searchType;\n    return fetch(url, {headers : {'Content-Type' : 'application/json'}, method : \"POST\", body: JSON.stringify(file)}).then(res => res.text())\n}\n\nexport const nlpService: NlpService = {\n    getNerByText: getNerByText,\n    getNerByFile: getNerByFile\n}","/Users/roberto/Projects/nlp-frontend/src/JsonView.tsx",["52","53","54","55","56","57","58","59","60","61"],"import React, {Fragment} from 'react';\nimport {Formik, Field, Form, FormikValues} from \"formik\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport TextAreaForm from \"./TextAreaForm\";\nimport {nlpService} from \"./NlpService\";\nimport ReactJson from \"react-json-view\";\n\nclass JsonView extends React.Component<any, any> {\n    constructor(props: { jsonText: string}) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Container>\n                <ReactJson src={this.props.jsonText} />\n            </Container>\n        )\n    }\n}\n\nexport default JsonView;","/Users/roberto/Projects/nlp-frontend/src/FileSubmitForm.tsx",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"71","severity":1,"message":"72","line":2,"column":30,"nodeType":"69","messageId":"70","endLine":2,"endColumn":42},{"ruleId":"73","severity":1,"message":"74","line":6,"column":5,"nodeType":"75","messageId":"76","endLine":8,"endColumn":6},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"71","severity":1,"message":"77","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"78","line":2,"column":9,"nodeType":"69","messageId":"70","endLine":2,"endColumn":15},{"ruleId":"71","severity":1,"message":"79","line":2,"column":17,"nodeType":"69","messageId":"70","endLine":2,"endColumn":22},{"ruleId":"71","severity":1,"message":"80","line":2,"column":24,"nodeType":"69","messageId":"70","endLine":2,"endColumn":28},{"ruleId":"71","severity":1,"message":"81","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"71","severity":1,"message":"77","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"77","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"78","line":2,"column":9,"nodeType":"69","messageId":"70","endLine":2,"endColumn":15},{"ruleId":"71","severity":1,"message":"79","line":2,"column":17,"nodeType":"69","messageId":"70","endLine":2,"endColumn":22},{"ruleId":"71","severity":1,"message":"80","line":2,"column":24,"nodeType":"69","messageId":"70","endLine":2,"endColumn":28},{"ruleId":"71","severity":1,"message":"72","line":2,"column":30,"nodeType":"69","messageId":"70","endLine":2,"endColumn":42},{"ruleId":"71","severity":1,"message":"82","line":3,"column":9,"nodeType":"69","messageId":"70","endLine":3,"endColumn":12},{"ruleId":"71","severity":1,"message":"83","line":3,"column":25,"nodeType":"69","messageId":"70","endLine":3,"endColumn":28},{"ruleId":"71","severity":1,"message":"84","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":20},{"ruleId":"71","severity":1,"message":"85","line":5,"column":9,"nodeType":"69","messageId":"70","endLine":5,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":9,"column":5,"nodeType":"75","messageId":"76","endLine":11,"endColumn":6},{"ruleId":"71","severity":1,"message":"72","line":2,"column":30,"nodeType":"69","messageId":"70","endLine":2,"endColumn":42},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'FormikValues' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Fragment' is defined but never used.","'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'React' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'TextAreaForm' is defined but never used.","'nlpService' is defined but never used.","no-global-assign","no-unsafe-negation"]