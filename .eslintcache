[{"/Users/roberto/Projects/nlp-frontend/src/index.js":"1","/Users/roberto/Projects/nlp-frontend/src/reportWebVitals.js":"2","/Users/roberto/Projects/nlp-frontend/src/App.js":"3","/Users/roberto/Projects/nlp-frontend/src/TextAreaForm.tsx":"4","/Users/roberto/Projects/nlp-frontend/src/NlpService.tsx":"5","/Users/roberto/Projects/nlp-frontend/src/JsonView.tsx":"6","/Users/roberto/Projects/nlp-frontend/src/FileSubmitForm.tsx":"7","/Users/roberto/Projects/nlp-frontend/src/NLPContainer.tsx":"8","/Users/roberto/Projects/nlp-frontend/src/AdvancedSearchContainer.tsx":"9","/Users/roberto/Projects/nlp-frontend/src/TextSearchForm.tsx":"10"},{"size":500,"mtime":1608810992499,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608810992500,"results":"13","hashOfConfig":"12"},{"size":1396,"mtime":1609171403708,"results":"14","hashOfConfig":"12"},{"size":1514,"mtime":1608824774824,"results":"15","hashOfConfig":"12"},{"size":1342,"mtime":1609171942851,"results":"16","hashOfConfig":"12"},{"size":582,"mtime":1608823612712,"results":"17","hashOfConfig":"12"},{"size":2232,"mtime":1608827824683,"results":"18","hashOfConfig":"12"},{"size":1931,"mtime":1609170753125,"results":"19","hashOfConfig":"12"},{"size":1374,"mtime":1609171942849,"results":"20","hashOfConfig":"12"},{"size":1113,"mtime":1609171601531,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"olhn3k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/roberto/Projects/nlp-frontend/src/index.js",[],["48","49"],"/Users/roberto/Projects/nlp-frontend/src/reportWebVitals.js",[],"/Users/roberto/Projects/nlp-frontend/src/App.js",["50"],"/Users/roberto/Projects/nlp-frontend/src/TextAreaForm.tsx",["51","52"],"import React, {Fragment} from 'react';\nimport {Formik, Field, Form, FormikValues} from \"formik\";\nimport {Row} from \"react-bootstrap\";\n\nclass TextAreaForm extends React.Component<any, any> {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Formik\n                    initialValues={{ text: \"Salve mi chiamo Mario Rossi e lavoro per Eni S.p.a con sede a Roma\" }}\n                    onSubmit={(values) => this.props.onSubmit(values)}\n                >\n                    <Form>\n                        <Row className='mt-2'>\n                            <div><label htmlFor=\"text\">Text upload</label></div>\n                        </Row>\n                        <Row className='mt-2'>\n                            <Field name=\"text\" as=\"textarea\" type=\"textarea\" className='mr-2' rows=\"4\" cols=\"60\" />\n                        </Row>\n                        {/*<Row className='mt-2'>\n                            <Field name=\"searchType\" as=\"select\">\n                                <option value=\"SENTENZA\">SENTENZA</option>\n                                <option value=\"VISURA\">VISURA</option>\n                            </Field>\n                        </Row>*/}\n                        <Row className='mt-2 mb-2'>\n                            <button type=\"submit\">Submit</button>\n                        </Row>\n                    </Form>\n                </Formik>\n            </Fragment>\n        )\n    }\n}\n\nexport default TextAreaForm;",["53","54"],"/Users/roberto/Projects/nlp-frontend/src/NlpService.tsx",["55","56"],"/Users/roberto/Projects/nlp-frontend/src/JsonView.tsx",["57","58","59","60","61","62","63","64","65","66"],"import React, {Fragment} from 'react';\nimport {Formik, Field, Form, FormikValues} from \"formik\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport TextAreaForm from \"./TextAreaForm\";\nimport {nlpService} from \"./NlpService\";\nimport ReactJson from \"react-json-view\";\n\nclass JsonView extends React.Component<any, any> {\n    constructor(props: { jsonText: string}) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Container>\n                <ReactJson src={this.props.jsonText} />\n            </Container>\n        )\n    }\n}\n\nexport default JsonView;","/Users/roberto/Projects/nlp-frontend/src/FileSubmitForm.tsx",["67"],"import React, {Fragment} from 'react';\nimport {Formik, Field, Form, FormikValues} from \"formik\";\nimport {Row} from \"react-bootstrap\";\nimport FileBase64 from 'react-file-base64';\n\nclass FileSubmitForm extends React.Component<any, any> {\n    constructor(props) {\n        super(props);\n        this.state = {file: null, fileReady: false};\n        this.disableSubmit = this.disableSubmit.bind(this);\n    }\n\n    getFiles(files){\n        this.setState({ file: files[0], fileReady: true })\n    }\n\n    disableSubmit(e) {\n        e.preventDefault();\n        console.log(\"m hai toccato\");\n        this.setState({file: this.state.file, fileReady: false})\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Formik\n                    initialValues={{ searchType: \"SENTENZA\"  }}\n                    onSubmit={(values) => this.props.onSubmit(values, this.state.file['base64'])}\n                >\n                    <Form>\n                        <Row className='mt-2'>\n                            <div><label htmlFor=\"file\">File upload</label></div>\n                        </Row>\n                        <Row className='mt-1 mb-4'>\n                            <FileBase64\n                                onClick={(e) => this.disableSubmit(e)}\n                                multiple={ true }\n                                onDone={ this.getFiles.bind(this) } />\n                        </Row>\n\n                        <Row className='mt-2'>\n                            <div><label htmlFor=\"searchType\">Select the right file Category</label></div>\n                        </Row>\n                        <Row className='mt-1'>\n                            <Field name=\"searchType\" as=\"select\">\n                                <option value=\"SENTENZA\">SENTENZA</option>\n                                <option value=\"VISURA\">VISURA</option>\n                            </Field>\n                        </Row>\n                        <Row className='mt-3 mb-2'>\n                            <button type=\"submit\" disabled={!this.state.fileReady}>Submit</button>\n                        </Row>\n                    </Form>\n                </Formik>\n            </Fragment>\n        )\n    }\n}\n\nexport default FileSubmitForm;","/Users/roberto/Projects/nlp-frontend/src/NLPContainer.tsx",[],"/Users/roberto/Projects/nlp-frontend/src/AdvancedSearchContainer.tsx",["68"],"import React from 'react';\nimport {FormikValues} from \"formik\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport {nlpService} from \"./NlpService\";\nimport JsonView from \"./JsonView\";\nimport TextAreaForm from \"./TextAreaForm\";\nimport TextSearchForm from \"./TextSearchForm\";\n\nclass AdvancedSearchContainer extends React.Component<any, any> {\n    constructor(props) {\n        super(props);\n        this.state = {response: {info: \"Results will be shown here!\"} }\n        this.sendSearchRequest = this.sendSearchRequest.bind(this);\n    }\n\n    sendSearchRequest(formData: FormikValues) {\n        nlpService.findDocsByText(formData['text'],0,20).then(\n            (result: string) => {\n                console.log('result: ', JSON.parse(result));\n                this.setState({response: JSON.parse(result)})\n            },\n            (error) => {\n                console.log(\"error\", error);\n            }\n        );\n\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <TextSearchForm onSubmit={this.sendSearchRequest}/>\n                    </Col>\n                </Row>\n                < hr/>\n                <Row>\n                    <JsonView jsonText={this.state.response}/>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default AdvancedSearchContainer;","/Users/roberto/Projects/nlp-frontend/src/TextSearchForm.tsx",["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":2,"column":30,"nodeType":"77","messageId":"78","endLine":2,"endColumn":42},{"ruleId":"81","severity":1,"message":"82","line":6,"column":5,"nodeType":"83","messageId":"84","endLine":8,"endColumn":6},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"79","severity":1,"message":"85","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"86","line":1,"column":16,"nodeType":"77","messageId":"78","endLine":1,"endColumn":24},{"ruleId":"79","severity":1,"message":"86","line":1,"column":16,"nodeType":"77","messageId":"78","endLine":1,"endColumn":24},{"ruleId":"79","severity":1,"message":"87","line":2,"column":9,"nodeType":"77","messageId":"78","endLine":2,"endColumn":15},{"ruleId":"79","severity":1,"message":"88","line":2,"column":17,"nodeType":"77","messageId":"78","endLine":2,"endColumn":22},{"ruleId":"79","severity":1,"message":"89","line":2,"column":24,"nodeType":"77","messageId":"78","endLine":2,"endColumn":28},{"ruleId":"79","severity":1,"message":"80","line":2,"column":30,"nodeType":"77","messageId":"78","endLine":2,"endColumn":42},{"ruleId":"79","severity":1,"message":"90","line":3,"column":9,"nodeType":"77","messageId":"78","endLine":3,"endColumn":12},{"ruleId":"79","severity":1,"message":"91","line":3,"column":25,"nodeType":"77","messageId":"78","endLine":3,"endColumn":28},{"ruleId":"79","severity":1,"message":"92","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":20},{"ruleId":"79","severity":1,"message":"93","line":5,"column":9,"nodeType":"77","messageId":"78","endLine":5,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":9,"column":5,"nodeType":"83","messageId":"84","endLine":11,"endColumn":6},{"ruleId":"79","severity":1,"message":"80","line":2,"column":30,"nodeType":"77","messageId":"78","endLine":2,"endColumn":42},{"ruleId":"79","severity":1,"message":"92","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":2,"column":30,"nodeType":"77","messageId":"78","endLine":2,"endColumn":42},{"ruleId":"81","severity":1,"message":"82","line":6,"column":5,"nodeType":"83","messageId":"84","endLine":8,"endColumn":6},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'FormikValues' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'React' is defined but never used.","'Fragment' is defined but never used.","'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'TextAreaForm' is defined but never used.","'nlpService' is defined but never used.","no-global-assign","no-unsafe-negation"]